openapi: 3.0.0
servers:
  - description: 本地开法服务器
    url: 'http://localhost:8080/'
info:
  description: |
    Xwallet钱包项目的服务端. 主要包括两大块功能
    1. 为移动端钱包提供以太坊的接入，包括主网和测试网
    2. 为Xender影视服务Tokenout业务提供支持服务

    这两部分功能在实现时可拆分为两个不同的服务，分别部署.
  version: 1.0.2
  title: XWalletServer
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: liujian@xender.com
tags:
  - name: mcoin
    description: MCoin的兑换与领取
  - name: eth
    description: 以太坊相关服务
paths:
  /mcoin/tokenOut:
    post:
      tags:
        - mcoin
      summary: 用户把金币兑换成Mcoin，增加Mcoin
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenOutTransaction'
        default:
          $ref: '#/components/responses/ApiError'
      requestBody:
        $ref: '#/components/requestBodies/tokenoutDetail'
  '/mcoin/tokenOut/{id}':
    get:
      tags:
        - mcoin
      summary: 根据ID查询tokenOut交易记录
      parameters:
        - name: id
          in: path
          description: tokenOut交易记录ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenOutTransaction'
        default:
          $ref: '#/components/responses/ApiError'
  '/mcoin/tokenOut/referTransactionId/{referTransactionId}':
    get:
      tags:
        - mcoin
      summary: 根据referTransactionId查询tokenOut交易记录
      parameters:
        - name: referTransactionId
          in: path
          description: tokenOut交易记录referTransactionId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenOutTransaction'
        default:
          $ref: '#/components/responses/ApiError'
  /mcoin/claim:
    post:
      tags:
        - mcoin
      summary: 提交领取MCoin请求
      description: 领取当前登录用户的MCoin
      parameters:
        - $ref: '#/components/parameters/firebaseToken'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimResponse'
        default:
          $ref: '#/components/responses/ApiError'
      requestBody:
        $ref: '#/components/requestBodies/ClaimRequest'
  '/mcoin/claim/{id}':
    get:
      tags:
        - mcoin
      summary: 根据ID查询claim交易
      parameters:
        - name: id
          in: path
          description: tokenOut交易记录ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimTransaction'
        default:
          $ref: '#/components/responses/ApiError'
  /mcoin/balance:
    get:
      tags:
        - mcoin
      summary: 查询登录用户余额
      parameters:
        - $ref: '#/components/parameters/firebaseToken'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: string
                format: big-interger
        default:
          $ref: '#/components/responses/ApiError'
  '/users/{phoneNumber}/mcoin/transactions':
    get:
      tags:
        - mcoin
      summary: 根据用户手机号查询MCoin的交易记录
      parameters:
        - name: phoneNumber
          in: path
          required: true
          schema:
            type: string
            format: phone-nubmer
      responses:
        '200':
          description: successful operation
          content:
            applicatioin/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MCoinTransaction'
        default:
          $ref: '#/components/responses/ApiError'
  '/users/{phoneNumber}/mcoin/tokenOut':
    get:
      tags:
        - mcoin
      summary: 根据用户手机号查询MCoin TokenOut记录
      parameters:
        - name: phoneNumber
          in: path
          required: true
          schema:
            type: string
            format: phone-nubmer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TokenOutTransaction'
        default:
          $ref: '#/components/responses/ApiError'
  '/users/{phoneNumber}/mcoin/claim':
    get:
      tags:
        - mcoin
      summary: 根据用户手机号查询MCoin Claim记录
      parameters:
        - name: phoneNumber
          in: path
          required: true
          schema:
            type: string
            format: phone-nubmer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimTransaction'
        default:
          $ref: '#/components/responses/ApiError'
  '/wallet/eth/address/{address}/balance':
    get:
      tags:
        - eth
      summary: 获取指定地址的ETH或Token余额
      description: >-
        当不指定tokens参数时，查询的时ETH余额。ETH也可视为一种token.当指定地址为`0x0000000000000000000000000000000000000000`即认为是ETH。可以一次查询多个Token的余额，用`,`隔开
      parameters:
        - $ref: '#/components/parameters/network'
        - $ref: '#/components/parameters/address'
        - name: tokens
          in: query
          required: false
          description: '多个地址用`,`隔开'
          schema:
            type: array
            items:
              type: string
              format: ethereum-address
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Balance'
        default:
          $ref: '#/components/responses/ApiError'
  '/wallet/eth/address/{address}/history/{tokenAddress}':
    get:
      tags:
        - eth
      parameters:
        - $ref: '#/components/parameters/network'
        - $ref: '#/components/parameters/address'
        - name: tokenAddress
          in: path
          required: true
          schema:
            type: string
            format: ethereum-address
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/afterTXHash'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionHistory'
        default:
          $ref: '#/components/responses/ApiError'
  '/wallet/eth/address/{address}/nonce':
    get:
      tags:
        - eth
      summary: 获取指定address的nonce
      parameters:
        - $ref: '#/components/parameters/network'
        - $ref: '#/components/parameters/address'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int64
        default:
          $ref: '#/components/responses/ApiError'
  '/wallet/eth/address/{address}/monitor':
    post:
      tags:
        - eth
      summary: |
        把 address 加入交易历史监控列表
      parameters:
        - $ref: '#/components/parameters/network'
        - $ref: '#/components/parameters/address'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ApiError'
  '/wallet/eth/address/{address}/transaction':
    get:
      tags:
        - eth
      summary: Returns a address transaction object array
      parameters:
      - $ref: '#/components/parameters/address'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/pageNumber'
      - $ref: '#/components/parameters/afterTXHash'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EthTransactions'
        default:
          $ref: '#/components/responses/ApiError'
  /wallet/eth/gasPrice:
    get:
      tags:
        - eth
      summary: 获取当前的gasPrice
      parameters:
        - $ref: '#/components/parameters/network'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: string
                format: big-integer
        default:
          $ref: '#/components/responses/ApiError'
  /wallet/eth/transaction:
    post:
      tags:
        - eth
      summary: 提交交易
      parameters:
        - $ref: '#/components/parameters/network'
      requestBody:
        description: '签名后的交易, 以`0x`开头的Hex编码的字节数组'
        content:
          application/json:
            schema:
              type: string
              format: hexString
      responses:
        '200':
          description: 'successful operation, 返回ETH交易ID.'
          content:
            application/json:
              schema:
                type: string
                format: hexsting
        default:
          $ref: '#/components/responses/ApiError'
  /wallet/eth/transaction/assess:
    post:
      tags:
        - eth
      summary: 评估ETH转账交易：测算gas，检查余额
      parameters:
        - $ref: '#/components/parameters/network'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EthTransferDetail'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EthTransferAssemet'
        default:
          $ref: '#/components/responses/ApiError'
  '/wallet/eth/transaction/{transactionId}':
    get:
      tags:
        - eth
      summary: 获取交易明细信息
      parameters:
        - $ref: '#/components/parameters/network'
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
            format: hex-string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDetail'
  '/wallet/eth/address/{address}/claim':
    post:
      tags:
      - eth
      summary: 领取测试网token
      parameters:
      - $ref: '#/components/parameters/network'
      - $ref: '#/components/parameters/address'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tokenClaimInfos'
  '/wallet/btc/balance':
    get:
      tags:
      - btc
      summary: 获取地址余额
      parameters:
      - $ref: '#/components/parameters/network'
      - name: addresses
        in: query
        required: false
        description: '多个地址用`,`隔开'
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/commonBalance'
  '/wallet/usdt/transaction/{txid}':
    get:
      tags:
      - usdt
      summary: 获取交易信息
      parameters:
      - $ref: '#/components/parameters/network'
      - name: txid
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/omniTransactionInfo'
  '/wallet/btc/transactionInfo':
    get:
      tags:
      - btc
      summary: 获取交易列表
      parameters:
      - $ref: '#/components/parameters/network'
      - $ref: '#/components/parameters/afterTXHash'
      - $ref: '#/components/parameters/limit'
      - name: addresses
        in: query
        required: false
        description: '多个地址用`,`隔开'
        schema:
          type: array
          items:
            type: string

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonTransactionHistory'
  '/wallet/btc/utxo':
    get:
      tags:
      - btc
      summary: 获取地址utxo
      parameters:
      - $ref: '#/components/parameters/network'
      - name: addresses
        in: query
        required: false
        description: '多个地址用`,`隔开'
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/btcUtxoInfo'
  '/wallet/btc/transaction/{txid}':
    get:
      tags:
      - btc
      summary: 获取交易详情
      parameters:
      - $ref: '#/components/parameters/network'
      - name: txid
        in: path
        required: true
        schema:
          type: string
          format: hex-string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/btcTransactionDetail'
  '/wallet/btc/register':
    post:
      tags:
      - btc
      summary: 注册btc地址（后端监控地址，完善从区块节点获得的数据）
      parameters:
      - $ref: '#/components/parameters/network'
      requestBody:
        description: '多个地址,list'
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: successful operation
  '/wallet/btc/sendTransaction':
    post:
      tags:
      - btc
      summary: 发起交易
      parameters:
      - $ref: '#/components/parameters/network'
      requestBody:
        description: '签名后的交易'
        content:
          application/json:
            schema:
              type: string
              format: hexString
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: string
                description: txid
  '/wallet/btc/fee':
    get:
      tags:
      - btc
      summary: 获取手续费
      parameters:
      - $ref: '#/components/parameters/network'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/btcFeeInfo'
  '/wallet/usdt/balance':
    get:
      tags:
      - usdt
      summary: 获取地址余额
      parameters:
      - $ref: '#/components/parameters/network'
      - name: addresses
        in: query
        required: false
        description: '多个地址用`,`隔开'
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/commonBalance'
  '/wallet/usdt/sendTransaction':
    post:
      tags:
      - usdt
      summary: 发起交易
      parameters:
      - $ref: '#/components/parameters/network'
      requestBody:
        description: '签名后的交易'
        content:
          application/json:
            schema:
              type: string
              format: hexString
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: string
                description: txid
  '/wallet/usdt/utxo':
    get:
      tags:
      - usdt
      summary: 获取地址utxo
      parameters:
      - $ref: '#/components/parameters/network'
      - name: addresses
        in: query
        required: false
        description: '多个地址用`,`隔开'
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/btcUtxoInfo'
  '/wallet/usdt/transactionList/{address}':
    get:
      tags:
      - usdt
      summary: 获取交易历史记录
      parameters:
      - $ref: '#/components/parameters/network'
      - $ref: '#/components/parameters/afterTXHash'
      - $ref: '#/components/parameters/limit'
      - name: address
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonTransactionHistory'
  '/wallet/cryptocurrency/order':
    post:
      tags:
      - cryptocurrency
      summary: 货币兑换下单操作
      parameters:
      - $ref: '#/components/parameters/network'
      - $ref: '#/components/parameters/signature'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/currencyChangeOrder'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: string
                description: orderId
  '/wallet/currencystock/lockstock':
    post:
      tags:
      - currency_stock
      summary: 锁定库存
      parameters:
      - $ref: '#/components/parameters/network'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stock'
      responses:
        '200':
          description: successful operation
  '/wallet/currencystock/reducestock':
    post:
      tags:
      - currency_stock
      summary: 扣减库存
      parameters:
      - $ref: '#/components/parameters/network'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stock'
      responses:
        '200':
          description: successful operation
  '/wallet/currencystock/unlockstock':
    post:
      tags:
      - currency_stock
      summary: 解锁库存
      parameters:
      - $ref: '#/components/parameters/network'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stock'
      responses:
        '200':
          description: successful operation
  '/wallet/cryptocurrency/modifypayinfo':
    post:
      tags:
      - cryptocurrency
      summary: 更新支付信息
      parameters:
      - $ref: '#/components/parameters/network'
      - $ref: '#/components/parameters/signature'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/currencyChangePayInfo'
      responses:
        '200':
          description: successful operation
  '/wallet/cryptocurrency/paysuccess':
    post:
      tags:
      - cryptocurrency
      summary: 确认支付成功
      parameters:
      - $ref: '#/components/parameters/network'
      - $ref: '#/components/parameters/signature'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/currencyChangePayResult'
      responses:
        '200':
          description: successful operation
  '/wallet/cryptocurrency/payfail':
    post:
      tags:
      - cryptocurrency
      summary: 确认支付失败
      parameters:
      - $ref: '#/components/parameters/network'
      - $ref: '#/components/parameters/signature'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/currencyChangePayResult'
      responses:
        '200':
          description: successful operation
  '/wallet/cryptocurrency/confirmTransferReq':
    post:
      tags:
      - cryptocurrency
      summary: 转币请求的状态
      parameters:
        - $ref: '#/components/parameters/network'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/currencyConfirmReq'
      responses:
        '200':
          description: successful operation
  '/wallet/cryptocurrency/transfersuccess':
    post:
      tags:
      - cryptocurrency
      summary: 确认转币成功
      parameters:
      - $ref: '#/components/parameters/network'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/currencyTransferResult'
      responses:
        '200':
          description: successful operation
  '/wallet/cryptocurrency/transferfail':
    post:
      tags:
      - cryptocurrency
      summary: 确认转币失败
      parameters:
      - $ref: '#/components/parameters/network'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/currencyTransferResult'
      responses:
        '200':
          description: successful operation
  '/wallet/currencystock/recharge':
    post:
      tags:
      - currency_stock
      summary: 增加库存
      parameters:
      - $ref: '#/components/parameters/Authorization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/walletReCharge'
      responses:
        '200':
          description: successful operation
  '/wallet/currencystock/uploadKey':
    post:
      tags:
      - currency_stock
      summary: 上报商品key
      parameters:
      - $ref: '#/components/parameters/Authorization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/walletUploadKey'
      responses:
        '200':
          description: successful operation
  '/wallet/cryptocurrency/timeoutOrderList':
    get:
      tags:
      - cryptocurrency
      summary: 查询超时订单
      parameters:
      - $ref: '#/components/parameters/Authorization'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/currencyOrderinfo'
  '/wallet/cryptocurrency/transactionList':
    get:
      tags:
      - cryptocurrency
      summary: 获取交易历史记录
      parameters:
      - $ref: '#/components/parameters/network'
      - $ref: '#/components/parameters/afterOrderId'
      - $ref: '#/components/parameters/limit'
      - name: addresses
        in: query
        required: false
        description: '多个地址用`,`隔开'
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/currencyOrderinfo'
  '/wallet/cryptocurrency/transferConfig':
    get:
      tags:
      - cryptocurrency
      summary: 获取配置信息
      parameters:
      - name: symbol
        in: query
        required: true
        description: '虚拟货币的symbol，多个用`,`隔开'
        example: 'BTC,ETH'
        schema:
          type: array
          items:
            type: string
      - name: convert
        in: query
        required: true
        description: '法币币种，多个法币用`,`隔开，支持的币种见 https://coinmarketcap.com/api/documentation/v1/#section/Standards-and-Conventions'
        example: 'USD'
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/currencyTransferConfiges'
  '/wallet/cryptocurrency/list':
    get:
      tags:
      - wallet
      summary: 获取虚拟货币法币价格
      parameters:
      - name: symbol
        in: query
        required: true
        description: '虚拟货币的symbol，多个用`,`隔开'
        example: 'BTC,ETH'
        schema:
          type: array
          items:
            type: string
      - name: convert
        in: query
        required: true
        description: '法币币种，多个法币用`,`隔开，支持的币种见 https://coinmarketcap.com/api/documentation/v1/#section/Standards-and-Conventions'
        example: 'USD'
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cryptocurrencies'
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
components:
  schemas:
    MCoinTransaction:
      type: object
      properties:
        id:
          type: integer
          format: int64
        phoneNumber:
          type: string
          format: phone-nubmer
        direction:
          type: string
          enum:
            - IN
            - OUT
        amount:
          type: string
          format: big-integer
        outId:
          type: integer
          format: int64
        status:
          type: integer
          description: 1：交易成功；0：已失败；2：处理中
          enum:
            - 0
            - 1
            - 2
          format: int
        transactionType:
          type: string
          enum:
            - tokenOut
            - claim
        createTime:
          type: integer
          format: int64
        modifyTime:
          type: integer
          format: int64
    TokenOutTransaction:
      type: object
      properties:
        id:
          type: integer
          format: int64
        clientId:
          type: string
        phoneNumber:
          type: string
          format: phone-nubmer
        referTransactionId:
          type: string
          description: XenderFlix中tokenOut交易ID
        amount:
          type: string
          format: big-integer
        createTime:
          type: integer
          format: int64
    ClaimRequest:
      type: object
      properties:
        amount:
          type: string
          format: big-integer
        to:
          type: string
          format: ethereum-address-hex
    ClaimResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        phoneNumber:
          type: string
        amount:
          type: string
          format: big-integer
        receiveAddress:
          type: string
          format: ethereum-address-hex
        block:
          type: integer
          format: int64
        seq:
          type: integer
          format: int64
        mcoinr:
          type: string
          format: hex
        mcoins:
          type: string
          format: hex
        mcoinv:
          type: integer
          format: int
        network:
          type: string
          description: mainnet：主网；sandbox：沙盒模式
          enum:
            - mainnet
            - sandbox
          format: string
        createTime:
          type: integer
          format: int64
        data:
          type: string
          description: 前端交易需要的数据
    ClaimTransaction:
      type: object
      properties:
        id:
          type: integer
          format: int64
        phoneNumber:
          type: string
        hash:
          type: string
        status:
          type: integer
          description: 1：交易成功；0：已失败；2：处理中
          enum:
            - 0
            - 1
            - 2
          format: int
        amount:
          type: string
          format: big-integer
        receiveAddress:
          type: string
          format: ethereum-address-hex
        block:
          type: integer
          format: int64
        seq:
          type: integer
          format: int64
        mcoinr:
          type: string
          format: hex
        mcoins:
          type: string
          format: hex
        mcoinv:
          type: integer
          format: int
        message:
          type: string
          description: 交易中的日志信息
        network:
          type: string
          description: mainnet：主网；sandbox：沙盒模式
          enum:
            - mainnet
            - sandbox
          format: string
        createTime:
          type: integer
          format: int64
        modifyTime:
          type: integer
          format: int64
    ApiError:
      type: object
      properties:
        status:
          type: integer
          format: int
        error:
          type: string
        message:
          type: string
        path:
          type: string
        timestamp:
          type: integer
          format: int64
    EthTransferDetail:
      type: object
      properties:
        id:
          type: string
        token:
          type: boolean
          description: 是否ERC20转账交易
        tokenAddress:
          type: string
          format: ethereum-address
        from:
          type: string
          format: ethereum-address
        to:
          type: string
          format: ethereum-address
        value:
          type: string
          format: big-integer
        gasPrice:
          type: string
          format: big-integer
    EthTransferAssemet:
      type: object
      properties:
        id:
          type: string
        token:
          type: boolean
          description: 是否ERC20转账交易
        tokenAddress:
          type: string
          format: ethereum-address
        from:
          type: string
          format: ethereum-address
        to:
          type: string
          format: ethereum-address
        value:
          type: string
          format: big-integer
        gasPrice:
          type: string
          format: big-integer
        gasLimit:
          type: string
          format: big-integer
        nonce:
          type: integer
          format: int64
        tokenBalance:
          type: string
          format: big-integer
        ethBalance:
          type: string
          format: big-integer
        hasEnoughBalance:
          type: boolean
        hasEnoughGas:
          type: boolean
    Balance:
      type: object
      properties:
        ownerAddress:
          type: string
          format: ethereum-address
        tokenAddress:
          type: string
          format: ethereum-address
        value:
          type: string
          format: big-integer
    TransactionDetail:
      type: object
      properties:
        transactionId:
          type: string
        blockHash:
          type: string
        blockNumber:
          type: integer
          format: int32
        from:
          type: string
        gas:
          type: string
          format: big-integer
        gasPrice:
          type: string
          format: big-integer
        input:
          type: string
          format: hex-string
        nonce:
          type: integer
          format: int32
        to:
          type: string
        transactionIndex:
          type: integer
        value:
          type: string
          format: big-integer
        v:
          type: integer
        r:
          type: string
          format: hex-string
        s:
          type: string
          format: hex-string
        status:
          type: integer
          enum:
          - 0
          - 1
          - 2
          description: 1：交易成功；0：已失败；2：处理中
    EthTransactionHistory:
      type: object
      properties:
        hash:
          type: string
        from:
          type: string
        to:
          type: string
        value:
          type: string
          description: 交易的eth
        fee:
          type: string
          description: 交易的手续费（eth）
        time:
          type: integer
          format: int64
        height:
          type: integer
          format: int64
          description: 交易所在的区块
        confirmations:
          type: integer
          format: int64
          description: 交易确认的区块
        status:
          type: integer
          enum:
          - 0
          - 1
          - 2
          description: 1：交易成功；0：已失败；2：处理中
    TransactionHistory:
      type: object
      properties:
        transactionId:
          type: string
        time:
          type: integer
          format: int64
        type:
          type: integer
          format: int
        address:
          type: string
          format: ethereum-address
        direction:
          type: string
          enum:
            - IN
            - OUT
        oppsiteAddress:
          type: string
          format: ethereum-address
        tokenAddress:
          type: string
          format: ethereum-address
        value:
          type: string
          format: big-intger
    tokenoutDetail:
      type: object
      required:
        - phoneNumber
        - referTransactionId
        - amount
      properties:
        phoneNumber:
          type: string
        referTransactionId:
          type: string
        amount:
          type: string
    tokenClaimInfo:
      type: object
      properties:
        id:
          type: integer
          format: big-integer
        address:
          type: string
        tokenAddress:
          type: string
        amount:
          type: string
        createTime:
          type: integer
          format: int64
    commonTransactionHistory:
      type: object
      properties:
        address:
          type: string
          description: '本次交易的查询的主体地址'
        oppsiteAddress:
          type: string
          description: '从哪收入，或者支出给谁'
        height:
          type: integer
        confirmations:
          type: integer
          description: '区块确认数'
        transactionId:
          type: string
        value:
          type: integer
          format: int64
        time:
          type: integer
          format: int64
          description: '交易确认的时间'
        direction:
          type: string
          enum:
          - IN
          - OUT
          description: 'IN收入，OUT支出'
    btcUtxoInfo:
      type: object
      properties:
        addrss:
          type: string
        height:
          type: integer
        txID:
          type: string
        n:
          type: integer
        value:
          type: integer
          format: int64
        type:
          type: string
    btcFeeInfo:
      type: object
      properties:
        fastestFee:
          type: integer
        halfHourFee:
          type: integer
        hourFee:
          type: integer
    btcTransactionDetail:
      type: object
      properties:
        version:
          type: integer
        height:
          type: integer
        txID:
          type: string
        size:
          type: integer
        vsize:
          type: integer
        confirmations:
          type: integer
        confirmTime:
          type: integer
          format: int64
        inputValue:
          type: string
          format: int64
        outputValue:
          type: string
          format: int64
        fee:
          type: string
          format: int64
        vin:
          type: array
          items:
            $ref: '#/components/schemas/btcTransactionInput'
        vout:
          type: array
          items:
            $ref: '#/components/schemas/btcTransactionOutput'
    btcTransactionInput:
      type: object
      properties:
        value:
          type: string
        coinbase:
          type: boolean
          description: '是否挖矿产出'
        txid:
          type: string
          description: '关联的out的交易id'
        vout:
          type: integer
          description: '关联的out在txid的序号'
        asm:
          type: string
        hex:
          type: string
        txinwitness:
          type: array
          items:
            type: string
        addresses:
          type: array
          description: '关联的地址列表'
          items:
            type: string
    btcTransactionOutput:
      type: object
      properties:
        value:
          type: string
        index:
          type: integer
          description: 'out在交易中的序号'
        asm:
          type: string
        addresses:
          type: array
          description: '关联的地址列表'
          items:
            type: string
        type:
          type: string
    currency:
      type: object
      properties:
        convertName:
          type: string
          description: '法币类型'
        price:
          type: string
          format: double
          description: '价格'
    cryptocurrency:
      type: object
      properties:
        symbol:
          type: string
        prices:
          type: array
          items:
            $ref: '#/components/schemas/currency'
    currencyTransferConfig:
      type: object
      properties:
        symbol:
          type: string
        maxLimit:
          type: string
        minLimit:
          type: string
        prices:
          type: array
          items:
            $ref: '#/components/schemas/currency'
    EthTransactions:
      type: array
      items:
        $ref: '#/components/schemas/EthTransactionHistory'
    tokenClaimInfos:
      type: array
      items:
        $ref: '#/components/schemas/tokenClaimInfo'
    cryptocurrencies:
      type: array
      items:
        $ref: '#/components/schemas/cryptocurrency'
    currencyTransferConfiges:
      type: array
      items:
        $ref: '#/components/schemas/currencyTransferConfig'
    commonBalance:
      type: object
      properties:
        address:
          type: string
          description: '地址'
        balance:
          type: integer
          format: int64
          description: '地址对应余额'
    omniTransactionInfo:
      type: object
      properties:
        value:
          type: string
        txid:
          type: string
        from:
          type: string
        to:
          type: string
        fee:
          type: string
          description: '手续费：btc，单位聪'
        block:
          type: integer
        confirmations:
          type: integer
        confirmTime:
          type: number
        blockhash:
          type: string
    currencyChangeOrder:
      type: object
      properties:
        receiver:
          type: string
        baseAmount:
          type: string
          description: 'baseCurrency最小的单位 例如：1/100000000USDT'
          format: bigInteger
        quoteAmount:
          type: string
          description: 'quoteCurrency最小单位 例如：1/100卢比'
          format: bigInteger
        bid:
          type: string
        baseCurrency:
          $ref: '#/components/schemas/transferBaseCurrency'
        quoteCurrency:
          $ref: '#/components/schemas/transferQuoteCurrency'
    currencyOrderinfo:
      type: object
      properties:
        orderId:
          type: string
        receiver:
          type: string
        baseAmount:
          type: string
        quoteAmount:
          type: string
        bid:
          type: string
        baseCurrency:
          $ref: '#/components/schemas/transferBaseCurrency'
        quoteCurrency:
          $ref: '#/components/schemas/transferQuoteCurrency'
        orderStatus:
          type: string
          enum:
          - ALREADY_ORDER
          - WAIT_PAY
          - ALREADY_PAY
          - ALREADY_REQ_TRANSFER
          - WAIT_CONFIGM_TRANSFER
          - EXCEPTION
          - CLOSED
          description: '订单状态依次为：已下单、待支付、已付款、已提交转币请求、待转币确认、异常、关闭'
        payType:
          type: string
        packageName:
          type: string
        payTransactionTime:
          type: integer
          format: int64
    stock:
      type: object
      properties:
        address:
          type: string
        amount:
          type: integer
          format: int64
    currencyChangePayInfo:
      type: object
      properties:
        orderId:
          type: string
        packageName:
          type: string
        payType:
          $ref: '#/components/schemas/transferPayType'
    currencyChangePayResult:
      type: object
      properties:
        orderId:
          type: string
        paymentId:
          type: string
        transactionTime:
          type: integer
          format: int64
        remark:
          type: string
        payType:
          $ref: '#/components/schemas/transferPayType'
    currencyConfirmReq:
      type: object
      properties:
        orderId:
          type: string
        blockchainTxid:
          type: string
        reqResult:
          type: string
          enum:
          - SUCCESS
          - FAIL
        remark:
          type: string
    currencyTransferResult:
      type: object
      properties:
        orderId:
          type: string
        blockchainTxid:
          type: string
        remark:
          type: string
    transferBaseCurrency:
      type: string
      description: '需要兑换成哪种货币'
      enum:
      - USDT
    transferQuoteCurrency:
      type: string
      description: '用什么货币兑换'
      enum:
      - INR
    transferPayType:
      type: string
      description: '支付方式'
      enum:
      - UPI
    walletReCharge:
      type: object
      properties:
        address:
          type: string
        amount:
          type: integer
    walletUploadKey:
      type: object
      properties:
        address:
          type: string
        key:
          type: string
  parameters:
    pageSize:
      name: pageSize
      in: query
      schema:
        type: integer
        format: int
        example: 1
      description: Number of transaction object returned;default 1
    pageNumber:
      name: pageNumber
      in: query
      schema:
        type: integer
        format: int
        example: 10
      description: Number of transaction object returned;default 10
    afterOrderId:
      name: orderId
      in: query
      schema:
        type: string
      description: Query the data after it
    afterTXHash:
      name: afterTXHash
      in: query
      schema:
        type: string
      description: Query the data after it
    limit:
      name: limit
      in: query
      schema:
        type: integer
        default: 10
    network:
      name: network
      in: header
      required: true
      schema:
        type: string
        enum:
          - mainnet
          - sandbox
    address:
      name: address
      in: path
      required: true
      schema:
        type: string
      description: eth address，start with `0x`
    tokenAddress:
      name: tokenAddress
      in: path
      required: true
      schema:
        type: string
      description: ERC20 Token合约地址，以`0x`开头
    firebaseToken:
      name: firebaseToken
      in: header
      required: true
      schema:
        type: string
      description: '通过firebase生成的token,用于前后端交互，其中payload中sub为用户手机号'
    transactionHash:
      name: hash
      in: path
      required: true
      schema:
        type: string
        format: hex-string
        example: '0x187ed018a339c05fb32b0acf3574b75ffef0100ed35783ad1d8e2b8dc20180e1'
      description: 交易哈希，以`0x`开头十六进制字符串
    signature:
      name: signature
      in: header
      required: true
      schema:
        type: string
        description: '数据签名'
    Authorization:
      name: Authorization
      in: header
      required: true
      schema:
        type: string
        description: '遵循oauth2规范'
  requestBodies:
    TokenOutTransaction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TokenOutTransaction'
    ClaimRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClaimRequest'
    tokenoutDetail:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tokenoutDetail'
  responses:
    ApiError:
      description: operation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
          scopes:
            'write:pets': modify pets in your account
            'read:pets': read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header